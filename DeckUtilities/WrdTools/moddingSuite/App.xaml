<Application x:Class="moddingSuite.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:Extension="clr-namespace:moddingSuite.View.Extension"
             xmlns:ValueEditing="clr-namespace:moddingSuite.View.Ndfbin.ValueEditing" >
    <!--StartupUri="View/ManagerMainView.xaml"-->
    <Application.Resources>
        <BitmapImage UriSource="View\Images\about-26.png" x:Key="AboutIcon" />
        <BitmapImage UriSource="View\Images\reuse-26.png" x:Key="ExtractRawIcon" />
        <BitmapImage UriSource="View\Images\zip-26.png" x:Key="ExtractZipedPartIcon" />
        <BitmapImage UriSource="View\Images\open_in_browser-26.png" x:Key="OpenDetailsIcon" />
        <BitmapImage UriSource="View\Images\play-26.png" x:Key="OpenMovieIcon" />
        <BitmapImage UriSource="View\Images\text-26.png" x:Key="OpenDictionayIcon" />

        <BitmapImage UriSource="View\Images\save-26.png" x:Key="SaveIcon" />

        <BitmapImage UriSource="View\Images\empty_filter-26.png" x:Key="EmptyFilter" />
        <BitmapImage UriSource="View\Images\filled_filter-26.png" x:Key="FilledFilter" />

        <BitmapImage UriSource="View\Images\View_Details-26.png" x:Key="ViewChanges" />

        <BitmapImage UriSource="View\Images\google_code-26.png" x:Key="ScriptIcon" />
        <BitmapImage UriSource="View\Images\question-26.png" x:Key="UnknownFileIcon" />
        <BitmapImage UriSource="View\Images\package-16.png" x:Key="PackageFileIcon" />
        <BitmapImage UriSource="View\Images\3d_printer-26.png" x:Key="MeshFileIcon" />


        <BitmapImage UriSource="View\Images\refresh_shield-26.png" x:Key="CreateHashIcon" />

        <BitmapImage UriSource="View\Images\Add_Row-26.png" x:Key="AddRowIcon" />
        <BitmapImage UriSource="View\Images\Delete_Row-26.png" x:Key="DeleteRowIcon" />
        <BitmapImage UriSource="View\Images\add_property-26.png" x:Key="AddPropIcon" />
        <BitmapImage UriSource="View\Images\delete_property-26.png" x:Key="DeletePropIcon" />
        <BitmapImage UriSource="View\Images\Generic_Sorting2-26.png" x:Key="InsertModeIcon" />
        

        <BitmapImage UriSource="View\Images\gplv3-127x51.png" x:Key="GplIcon" />

        <BitmapImage UriSource="View\Images\picture-26.png" x:Key="TextureIcon" />

        <BitmapImage UriSource="View\Images\export-26.png" x:Key="ExportIcon" />
        <BitmapImage UriSource="View\Images\import-26.png" x:Key="ImportIcon" />

        <BitmapImage UriSource="View\Images\google_web_search-26.png" x:Key="SearchIcon" />
        <BitmapImage UriSource="View\Images\error-32.png" x:Key="ErrorIcon" />
        <BitmapImage UriSource="View\Images\donate.gif" x:Key="DonateIcon" />

        <BitmapImage UriSource="View\Images\copy-26.png" x:Key="CopyIcon" />

        <BitmapImage UriSource="View\Images\puzzle-26.png" x:Key="ScenarioIcon" />
        <BitmapImage UriSource="View\Images\geometry-26.png" x:Key="ZoneIcon" />

        
        <BitmapImage UriSource="View\Images\exception.png" x:Key="ExceptionArt" />


        <!--Thanks to Mitchellnolte!!!-->
        <ImageBrush ImageSource="View\Images\about.jpg" x:Key="SplashScreenArt" />


        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <Extension:BoolToVisibilityCollapsedConverter x:Key="BoolToVisibilityCollapsedConverter" />
        
        <Extension:LocalisationHashValueConverter x:Key="LocalisationHashValueConverter" />
        <Extension:Color32ValueConverter x:Key="Color32ValueConverter" />

        <Extension:ColorToBrushConverter x:Key="ColorToBrushConverter" />

        <Extension:ByteToKiloByteConverter x:Key="ByteToKiloByteConverter" />


        <Extension:EdataFileTypeToImageConverter x:Key="EdataFileTypeToImageConverter" />

        <Extension:EditingControlDataTemplateSelector x:Key="editingControlTemplateSelector" />

        <DataTemplate x:Key="FloatEditingTemplate">
            <ValueEditing:FloatEditingTemplate />
        </DataTemplate>
        <DataTemplate x:Key="UInt32EditingTemplate">
            <ValueEditing:UInt32EditingTemaplte />
        </DataTemplate>
        <DataTemplate x:Key="Int32EditingTemplate">
            <ValueEditing:Int32EditingTemplate />
        </DataTemplate>
        <DataTemplate x:Key="GuidEditingTemplate">
            <ValueEditing:GuidEditingTemplate />
        </DataTemplate>
        <DataTemplate x:Key="BooleanEditingTemplate">
            <ValueEditing:BooleanEditingTemplate />
        </DataTemplate>

        <DataTemplate x:Key="ObjectReferenceEditingTemplate">
            <ValueEditing:ObjectReferenceEditingTemplate />
        </DataTemplate>

        <DataTemplate x:Key="MapEditingTemplate">
            <ValueEditing:MapEditingTemplate />
        </DataTemplate>


        <DataTemplate x:Key="StringTableEditingTemplate">
            <ValueEditing:StringTableEditingTemplate />
        </DataTemplate>

        <DataTemplate x:Key="TransTableReferenceEditingTemplate">
            <ValueEditing:TransTableReferenceEditingTemplate />
        </DataTemplate>

        <DataTemplate x:Key="LocaleHashEditingTemplate">
            <ValueEditing:LocaleHashEditingTemplate />
        </DataTemplate>

        <DataTemplate x:Key="ColorPickerEditingTemplate">
            <ValueEditing:ColorPickerEditingTemplate />
        </DataTemplate>

        <DataTemplate x:Key="BlobEditingTemplate">
            <ValueEditing:BlobEditingTemplate />
        </DataTemplate>
        
        <DataTemplate x:Key="FloatPairEditingTemplate">
            <ValueEditing:FloatPairEditingTemplate />
        </DataTemplate>

        <DataTemplate x:Key="VectorEditingTemplate">
            <ValueEditing:VectorEditingTemplate />
        </DataTemplate>

        <Style TargetType="Image">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>

<!-- -->

        <SolidColorBrush x:Key="AboutBackground" >
            <SolidColorBrush.Color>
                <Color A="40" R="255" G="255" B="255" />
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <SolidColorBrush x:Key="ToolBarBackground" >
            <SolidColorBrush.Color>
                <Color A="255" R="239" G="239" B="242" />
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <SolidColorBrush x:Key="Foreground" >
            <SolidColorBrush.Color>
                <Color A="255" R="30" G="30" B="30" />
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <SolidColorBrush x:Key="DataGridCloumnHeaderBackgroundHover" >
            <SolidColorBrush.Color>
                <Color A="255" R="254" G="254" B="254" />
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <SolidColorBrush x:Key="DataGridCloumnHeaderBackground" >
            <SolidColorBrush.Color>
                <Color A="255" R="246" G="246" B="246" />
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <SolidColorBrush x:Key="DataGridCloumnHeaderBorder" >
            <SolidColorBrush.Color>
                <Color A="255" R="204" G="206" B="219" />
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <SolidColorBrush x:Key="ToolBarBorder" >
            <SolidColorBrush.Color>
                <Color A="255" R="0" G="122" B="204" />
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <SolidColorBrush x:Key="ToolBarButtonHover" >
            <SolidColorBrush.Color>
                <Color A="255" R="28" G="151" B="234" />
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <SolidColorBrush x:Key="ToolBarButtonPressed">
            <SolidColorBrush.Color>
                <Color A="255" R="0" G="122" B="204" />
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <Style x:Key="Vs2010StyleToolBar" TargetType="{x:Type ToolBar}">
            <Setter Property="Background" Value="{StaticResource ToolBarBackground}"/>
            <Setter Property="Margin" Value="0,0,0,5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolBar}">
                        <Grid x:Name="Grid" Margin="0" SnapsToDevicePixels="true">
                            <Border x:Name="MainPanelBorder" 
                                    BorderBrush="{StaticResource ToolBarBorder}" 
                                    BorderThickness="0 0 0 2" 
                                    Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}"
                                    Margin="{TemplateBinding Margin}">
                                <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Background" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                    <Condition Property="IsChecked" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsKeyboardFocused" Value="true"/>
                                    <Condition Property="IsChecked" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}"/>
                            </MultiTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">

                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">

                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">

                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonPressed}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Separator}">
            <Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}"/>
            <Setter Property="MinWidth" Value="1"/>
            <Setter Property="MinHeight" Value="1"/>
            <Setter Property="Margin" Value="2,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="4,4,4,4"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource ToolBarBackground}"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{StaticResource ToolBarBorder}" BorderThickness="0 0 0 2">
                                <TabPanel x:Name="HeaderPanel"  IsItemsHost="true" Margin="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                            </Border>
                            <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="5,3,5,3"/>
            <Setter Property="Background" Value="{StaticResource ToolBarBackground}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid SnapsToDevicePixels="true" >
                            <Border  x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="Content" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonPressed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>